name: Test

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python_minor: ['6', '7', '8', '9', '10']

    defaults:
      run:
        working-directory: light-curve

    steps:
    - uses: actions/checkout@v2
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Set up Python 3.${{ matrix.python_minor }}
      uses: actions/setup-python@v2
      with:
        python-version: "3.${{ matrix.python_minor }}"
    - name: Install tox
      run: pip install tox
    - name: Run Python tests
      run: tox -p -q -e py3${{ matrix.python_minor }}

  cargo-fmt:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Check Rust formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --manifest-path=light-curve/Cargo.toml -- --check

  cargo-clippy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Run Rust code analysis
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --manifest-path=light-curve/Cargo.toml --all-targets -- -D warnings

  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
        - name: 'default features'
          cargo_extra_args: '--locked'
          install_fftw: false
        - name: 'dynamically linked FFTW'
          cargo_extra_args: '--locked --no-default-features --features fftw-dynamic'
          install_fftw: true
        - name: 'dynamically linked FFTW + GSL'
          cargo_extra_args: '--locked --no-default-features --features fftw-dynamic,gsl'
          install_fftw: true
        - name: 'MKL + GSL'
          cargo_extra_args: '--locked --no-default-features --features mkl,gsl'
          install_fftw: false

    defaults:
      run:
        working-directory: light-curve

    steps:
    - uses: actions/checkout@v2
    - name: Install FFTW
      if: ${{ matrix.install_fftw }}
      run: |
        sudo apt-get update
        sudo apt-get install libfftw3-dev
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install maturin
      run: pip install maturin
    - name: Build package with ${{ matrix.name }}
      run: maturin build --manylinux=off --cargo-extra-args='${{ matrix.cargo_extra_args }}'

  arm:

    runs-on: [self-hosted, linux, ARM64]

    defaults:
      run:
        working-directory: light-curve

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: maturin build
