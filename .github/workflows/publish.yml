name: Publish Python packages

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  cibuildwheel:
    name: Build wheels on ${{ matrix.os }}  ${{ matrix.arch }} ${{ matrix.interpreter }}
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./light-curve

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        interpreter: [cp37-manylinux, cp38-manylinux, cp39-manylinux, cp310-manylinux, cp311-manylinux]
        arch: [aarch64, ppc64le]
        include:
          - os: macos-11   # All x86_64 macOS targets
            arch: auto
            interpreter: "*"
          - os: ubuntu-20.04  # All i686 and x86_64 Linux targets
            arch: auto
            interpreter: "*"

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        if: ${{ matrix.arch != 'auto' }}
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set CIBW_BUILD
        if: ${{ matrix.arch != 'auto' }}
        run: echo "CIBW_BUILD=${{ matrix.interpreter }}_${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Set CIBW_ARCHS
        run : echo "CIBW_ARCHS=${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
        with:
          package-dir: ./light-curve
        env:
          CIBW_SKIP: "*-musllinux_i686"  # rustup doesn't install i686-musl
          CIBW_BUILD_VERBOSITY: "3"

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          if-no-files-found: error

  sdist:
    name: Build source distribution
    runs-on: ubuntu-20.04

    defaults:
      run:
        working-directory: ./light-curve

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install maturin
        run: pip install 'maturin>=0.13,<0.14'

      - name: Build sdist
        run: maturin sdist

      - name: Upload sdist as an artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./light-curve/target/wheels/*.tar.gz
          if-no-files-found: error

  publish:
    needs: [cibuildwheel, sdist]

    name: Publish light-curve
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/download-artifact@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install twine
        run: pip install twine

      - name: Publish light-curve
        working-directory: artifact
        run: twine upload *whl *tar.gz -u __token__ -p ${{ secrets.PYPI_TOKEN_LIGHT_CURVE }} --verbose

  publish-light-curve-python:
    needs: publish

    name: Publish light-curve-python
    runs-on: ubuntu-20.04

    defaults:
      run:
        working-directory: light-curve-python

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install deps
        run: python3 -mpip install toml twine

      - name: Publish light-curve-python
        run: |
          python3 setup.py sdist
          twine check --strict dist/*
          twine upload dist/* -u __token__ -p ${{ secrets.PYPI_TOKEN_LIGHT_CURVE_PYTHON }} --verbose
